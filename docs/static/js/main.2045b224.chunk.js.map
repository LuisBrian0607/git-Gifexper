{"version":3,"sources":["components/AddCategory.jsx","components/helpers/getGif.js","components/GifGridItems.jsx","components/GifGrid.jsx","components/hooks/useFetchGifs.js","components/GifExpertApp.jsx","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","Gitgrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFechGifs","GifExpert","categories","ReactDOM","render","document","getElementById"],"mappings":"8JAGaA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,mCACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAY,mBACZC,SApBU,SAACR,GACvBF,EAAcE,EAAES,OAAOH,e,+BCNlBI,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaXM,GAbW,4CAAH,sDCCNO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EACXf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAqBrC,OAhBAC,qBAAU,WACNxB,EAAOC,GACFwB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAGd,UAGX,CAACpB,IAGGqB,EDjBaM,CAAY3B,GAA1BO,EAF+B,EAE/BA,KAAKa,EAF0B,EAE1BA,QAOX,OACI,qCACA,6BAAKpB,IACJoB,GAAU,wCAEZ,qBAAKJ,UAAU,YAAf,SAGaT,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEWrBiB,EA/BG,WAAO,IAAD,EAEc3C,mBAAS,CAAC,cAFxB,mBAEf4C,EAFe,KAEH7C,EAFG,KAUtB,OACE,qCACE,2CACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBAEA,6BAEI6C,EAAWpB,KAAI,SAAAT,GACb,OACE,cAAC,EAAD,CAECA,SAAUA,GADLA,YCpBpB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2045b224.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategories = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats,]);\r\n            setInputValue('');   \r\n        }\r\n               \r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    placeholder='ingresa tu heroe'\r\n                    onChange={handleInputChange} />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nAddCategories.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGif = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FW72QN9fKjBb7PWxisTfCmL61N2V2800`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {useFechGifs} from './hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItems';\r\n//import {getGif} from './helpers/getGif';\r\n\r\nexport const Gitgrid = ({ category }) => {\r\n    //const [images, setImages] = useState([]);\r\n    const{data,loading}=useFechGifs(category);\r\n\r\n  //  useEffect(() => {\r\n    //    getGif(category)\r\n     //   .then(setImages);\r\n    //}, [category]);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>  \r\n        {loading &&<p>Loading</p>}\r\n    \r\n       <div className=\"card-grid\">\r\n                    \r\n                {\r\n                    data.map(img => (\r\n                        <GifGridItem\r\n                           key={img.id}\r\n                           {...img}\r\n                        />\r\n                    ))\r\n                }           \r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGif } from '../helpers/getGif';\r\n\r\nexport const useFechGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then(imgs=>{\r\n\r\n                setTimeout(()=>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n\r\n                },3000)\r\n               \r\n            });\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n}","import React,{useState} from 'react';\r\nimport {AddCategories} from './AddCategory';\r\nimport {Gitgrid} from './GifGrid';\r\n\r\nconst GifExpert = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  //funcion para agregar elementos al arreglo\r\n  //const handleAdd=()=>{\r\n  //  setCategories([...categories,'La capelucita Will'])\r\n  // setCategories(cats=>[...cats,'Pokoyo']);\r\n  //}\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpert</h2>\r\n      <AddCategories setCategories={setCategories}/>\r\n      <hr />\r\n\r\n      <ul>\r\n        {\r\n          categories.map(category => {\r\n            return (\r\n              <Gitgrid\r\n               key={category}\r\n               category={category}/>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpert;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './components/GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpert/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}